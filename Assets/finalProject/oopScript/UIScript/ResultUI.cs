using UnityEngine;
using TMPro;
using System.Text;
using System.Linq;

public class ResultUI : MonoBehaviour
{
    [SerializeField] private TMP_Text wpmText;
    [SerializeField] private TMP_Text accText;
    [SerializeField] private TMP_Text scoreText;
    [SerializeField] private TMP_Text timeText;

    [Header("Coaching")]
    [SerializeField] private TMP_Text praiseText;  // ‡∏Ñ‡∏≥‡∏ä‡∏°/‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à
    [SerializeField] private TMP_Text adviceText;  // ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥

    // ‡∏ä‡∏∏‡∏î‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° (‡πÅ‡∏Å‡πâ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏Ñ‡∏≤‡πÅ‡∏£‡∏Å‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÄ‡∏Å‡∏°‡πÑ‡∏î‡πâ)
    private static readonly string[] PRAISES = {
        "‡∏™‡∏∏‡∏î‡∏¢‡∏≠‡∏î! ‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Ñ‡∏°‡∏Å‡∏£‡∏¥‡∏ö ‡πÅ‡∏ñ‡∏°‡πÄ‡∏£‡πá‡∏ß‡∏î‡πâ‡∏ß‡∏¢ üéØ",
        "‡πÇ‡∏´‡∏î‡∏°‡∏≤‡∏Å! ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡∏ô‡∏¥‡πâ‡∏ß‡∏î‡∏µ‡∏°‡∏≤‡∏Å ‡∏£‡∏±‡∏Å‡∏©‡∏≤‡∏°‡∏≤‡∏ï‡∏£‡∏ê‡∏≤‡∏ô‡∏ô‡∏µ‡πâ‡πÑ‡∏ß‡πâ‡πÄ‡∏•‡∏¢ üî•",
        "‡∏î‡∏µ‡∏°‡∏≤‡∏Å‡πÜ! ‡∏ó‡∏±‡πâ‡∏á‡πÄ‡∏£‡πá‡∏ß‡∏ó‡∏±‡πâ‡∏á‡∏ä‡∏±‡∏ß‡∏£‡πå ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ‡πÑ‡∏õ‡∏ï‡πà‡∏≠‡πÑ‡∏î‡πâ‡∏≠‡∏µ‡∏Å‡πÑ‡∏Å‡∏• üöÄ",
        "‡πÄ‡∏ü‡∏µ‡πâ‡∏¢‡∏ß‡∏à‡∏£‡∏¥‡∏á! ‡∏Ñ‡∏∏‡∏°‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡∏Å‡∏±‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏î‡πâ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ä‡∏∑‡πà‡∏≠ üòé",
        "‡πÄ‡∏ó‡∏û‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏∞! ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏™‡∏ß‡∏¢‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡∏ï‡∏≤ ‡∏ô‡∏±‡∏ö‡∏ñ‡∏∑‡∏≠‡πÄ‡∏•‡∏¢ üëë"
    };

    private static readonly string[] ENCOURAGES = {
        "‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡πÑ‡∏£ ‡πÄ‡∏î‡∏¥‡∏ô‡∏ñ‡∏π‡∏Å‡∏ó‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß ‡∏•‡∏∏‡∏¢‡∏ï‡πà‡∏≠‡∏≠‡∏µ‡∏Å‡∏ô‡∏¥‡∏î! üí™",
        "‡∏ä‡∏¥‡∏•‡πÜ ‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÑ‡∏´‡∏• ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏Å‡πá‡πÄ‡∏õ‡πá‡∏ô‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏∞‡πÄ‡∏≠‡∏á üôÇ",
        "‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏≠‡∏≤‡∏à‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏™‡∏∏‡∏î ‡πÅ‡∏ï‡πà‡∏ô‡∏≤‡∏¢‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏≠‡∏¢‡∏π‡πà üëç",
        "‡∏ú‡∏¥‡∏î‡πÑ‡∏î‡πâ ‡πÅ‡∏ï‡πà‡∏≠‡∏¢‡πà‡∏≤‡∏´‡∏¢‡∏∏‡∏î‡∏ã‡πâ‡∏≠‡∏° ‡πÄ‡∏î‡∏µ‡πã‡∏¢‡∏ß‡∏°‡∏±‡∏ô‡∏à‡∏∞‡πÄ‡∏Ç‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏≠‡∏á ‚ú®",
        "‡∏≠‡∏¢‡πà‡∏≤‡πÄ‡∏û‡∏¥‡πà‡∏á‡∏ó‡πâ‡∏≠ ‡∏´‡∏ô‡∏∂‡πà‡∏á‡∏Å‡πâ‡∏≤‡∏ß‡πÄ‡∏•‡πá‡∏Å‡πÜ ‡∏£‡∏ß‡∏°‡∏Å‡∏±‡∏ô‡∏Ñ‡∏∑‡∏≠‡∏Å‡πâ‡∏≤‡∏ß‡πÉ‡∏´‡∏ç‡πà üôå"
    };

    void Start()
    {
        // ‡∏î‡∏∂‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô
        ScoreData data = null;
        var gdm = GameDataManager.Instance ?? FindObjectOfType<GameDataManager>(true);
        if (gdm != null) data = gdm.ScoreData;
        if (data == null) data = ResultContext.LastScore;

        if (data == null)
        {
            Debug.LogWarning("[ResultUI] No score found. Showing defaults.");
            SetBasics("-", "-", "-", "-");
            SetTexts("‚Äî", "‚Äî");
            return;
        }

        SetBasics(
            $"{data.WPM:F1}",
            $"{data.ACC:F1}%",
            $"{data.FinalScore:F0}",
            $"{data.TimeUsed:F1}s"
        );

        // ‡∏ï‡∏±‡∏î‡∏™‡∏¥‡∏ô "‡∏Ñ‡∏≥‡∏ä‡∏°" ‡∏´‡∏£‡∏∑‡∏≠ "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÉ‡∏à"
        bool isPraise = (data.ACC > 90f && data.WPM >= 30f);
        string msg1 = isPraise
            ? PRAISES[Random.Range(0, PRAISES.Length)]
            : ENCOURAGES[Random.Range(0, ENCOURAGES.Length)];

        // ‡∏ñ‡πâ‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏≥‡∏ä‡∏° ‚Üí ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
        string msg2 = "";
        if (!isPraise)
        {
            // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏´‡∏•‡∏±‡∏Å
            if (data.ACC < 70f)
                msg2 = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ú‡∏¥‡∏î‡∏°‡∏≤‡∏Å‡πÑ‡∏õ ‡∏ï‡πâ‡∏≠‡∏á‡∏ù‡∏∂‡∏Å‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ô‡∏µ‡πâ üß±";
            else if (data.WPM < 20f)
                msg2 = "‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ä‡πâ‡∏≤‡πÄ‡∏Å‡∏¥‡∏ô‡πÑ‡∏õ ‡∏Ñ‡∏ß‡∏£‡∏û‡∏±‡∏í‡∏ô‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß üèÉ";

            // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡∏≠‡∏¥‡∏á‡∏ï‡∏±‡∏ß‡∏ó‡∏µ‡πà‡∏ú‡∏¥‡∏î‡πÄ‡∏Å‡∏¥‡∏ô 5 ‡∏Ñ‡∏£‡∏±‡πâ‡∏á
            if (data.WrongChars != null && data.WrongCounts != null && data.WrongChars.Count == data.WrongCounts.Count)
            {
                var hardOnes = new System.Collections.Generic.List<char>();
                for (int i = 0; i < data.WrongChars.Count; i++)
                {
                    if (data.WrongCounts[i] > 5) hardOnes.Add(data.WrongChars[i]);
                }

                if (hardOnes.Count > 0)
                {
                    // ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πâ‡∏ô‡πÜ ‡πÄ‡∏ä‡πà‡∏ô a, s, ;  (‡πÑ‡∏°‡πà‡πÉ‡∏™‡πà‡πÄ‡∏ß‡πâ‡∏ô‡∏ß‡∏£‡∏£‡∏Ñ‡πÄ‡∏¢‡∏≠‡∏∞‡πÉ‡∏´‡πâ‡∏î‡∏π‡∏™‡∏ß‡∏¢)
                    var list = string.Join(", ", hardOnes.Select(c => c.ToString()));
                    msg2 += (msg2.Length > 0 ? "\n" : "") + $"‡∏Ñ‡∏ß‡∏£‡πÑ‡∏õ‡∏ù‡∏∂‡∏Å‡∏Å‡∏î‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞: {list}";
                }
            }

            if (string.IsNullOrEmpty(msg2))
                msg2 = "‡πÇ‡∏ü‡∏Å‡∏±‡∏™‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏°‡πà‡∏≥‡πÄ‡∏™‡∏°‡∏≠ ‡∏•‡∏≠‡∏á‡∏ã‡πâ‡∏≠‡∏°‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏î‡∏¥‡∏°‡∏≠‡∏µ‡∏Å‡∏£‡∏≠‡∏ö‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß ‚è±Ô∏è";
        }

        SetTexts(msg1, isPraise ? "" : msg2);
    }

    private void SetBasics(string wpm, string acc, string score, string time)
    {
        if (wpmText)  wpmText.text  = $"WPM: {wpm}";
        if (accText)  accText.text  = $"ACC: {acc}";
        if (scoreText)scoreText.text= $"Score: {score}";
        if (timeText) timeText.text = $"Time: {time}";
    }

    private void SetTexts(string praise, string advice)
    {
        if (praiseText) praiseText.text = praise;
        if (adviceText)
        {
            adviceText.gameObject.SetActive(!string.IsNullOrEmpty(advice));
            adviceText.text = advice;
        }
    }

    public void BackToMenu()
    {
        GameDataManager.Instance?.ResetAll();
        GameFlowManager.Instance?.LoadMainMenu();
        // ‡∏´‡∏£‡∏∑‡∏≠ SceneManager.LoadScene("MenuScene");
    }
}
