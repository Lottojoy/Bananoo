using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEngine.UI;
using System;

public class ResultManager : MonoBehaviour
{
   /* public Button backButton;
    private int slot;

    void Start()
    {
        slot = PlayerPrefs.GetInt("CurrentSlot", 0);

        if (backButton != null)
            backButton.onClick.AddListener(OnBackToMain);
    }

    void OnBackToMain()
    {
        Player player = SaveManager.LoadPlayer(slot);
        if (player == null)
        {
            Debug.LogWarning("‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Player ‡πÉ‡∏ô slot ‡∏ô‡∏µ‡πâ");
            SceneManager.LoadScene("MainScene");
            return;
        }

        Debug.Log($"[Result] Player {player.playerName} ‡πÄ‡∏•‡πà‡∏ô‡∏ñ‡∏∂‡∏á‡∏î‡πà‡∏≤‡∏ô {GameData.CurrentStageID} (‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô={player.currentLessonIndex})");

        // ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï currentLessonIndex ‡∏ñ‡πâ‡∏≤‡∏ú‡πà‡∏≤‡∏ô‡∏î‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà
        if (GameData.CurrentStageID >= player.currentLessonIndex)
        {
            player.currentLessonIndex = GameData.CurrentStageID + 1;
            Debug.Log($"üéâ ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÉ‡∏´‡∏°‡πà = {player.currentLessonIndex}");
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏° streak ‡∏ñ‡πâ‡∏≤ GameData.CanAddStreak ‡πÄ‡∏õ‡πá‡∏ô true
        if (GameData.CanAddStreak)
        {
            DateTime today = DateTime.Now.Date;
            DateTime lastPlayed = string.IsNullOrEmpty(player.lastPlayedDate)
                                    ? today.AddDays(-2) // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ñ‡πà‡∏≤‡πÄ‡∏Å‡πà‡∏≤ ‡πÉ‡∏´‡πâ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡πÄ‡∏•‡πà‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ß‡∏≤‡∏ô
                                    : DateTime.Parse(player.lastPlayedDate).Date;

            if (lastPlayed == today.AddDays(-1))
            {
                player.streakDays++; // ‡πÄ‡∏•‡πà‡∏ô‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á
            }
            else
            {
                player.streakDays = 1; // ‡πÄ‡∏£‡∏¥‡πà‡∏° streak ‡πÉ‡∏´‡∏°‡πà
            }

            player.lastPlayedDate = today.ToString("yyyy-MM-dd");
            GameData.CanAddStreak = false; // ‡πÄ‡∏•‡πà‡∏ô‡πÅ‡∏•‡πâ‡∏ß‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
            Debug.Log($"‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° streak! ‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ streakDays = {player.streakDays}");
        }

        // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å player ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å‡∏≠‡∏¢‡πà‡∏≤‡∏á
        SaveManager.SavePlayer(slot, player);

        // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡πÅ‡∏Ñ‡πà GameData ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô/‡∏î‡πà‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏Å‡∏£‡∏∞‡∏ó‡∏ö‡πÄ‡∏ß‡∏•‡∏≤ streak
        ResetGameData();

        // ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ MainScene
        SceneManager.LoadScene("MainScene");
    }

    void ResetGameData()
    {
        GameData.CurrentLessonID = null;
        GameData.CurrentStageID = 0;
        // GameData.CanAddStreak ‡∏à‡∏∞‡∏Ñ‡∏á‡∏≠‡∏¢‡∏π‡πà‡πÄ‡∏û‡∏£‡∏≤‡∏∞‡πÄ‡∏£‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏ï‡πà‡∏≠
        Debug.Log("[Result] ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï GameData ‡∏ö‡∏ó‡πÄ‡∏£‡∏µ‡∏¢‡∏ô‡πÅ‡∏•‡∏∞‡∏î‡πà‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢");
    }*/
}
